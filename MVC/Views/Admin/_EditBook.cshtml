@model Business.DTO.BookViewModel

@using (Ajax.BeginForm("EditBook", "Admin", null, new AjaxOptions {UpdateTargetId = "target", HttpMethod = "POST", LoadingElementId = "loaderDiv"}, new {role = "form", id = "frmEditBook"}))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.LanguageId)
    @Html.HiddenFor(model => model.SeriesId)
    @Html.HiddenFor(model => model.SeriesPartId)
    @Html.HiddenFor(model => model.PublisherId)
    <div class="form-horizontal">
        <h4>Ändra detaljer</h4>
        <hr/>
   
             <div class="form-group">
            @Html.Label("Författare", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.AuthorsList, Model.AuthorsChoices)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Uppläsare", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
               @Html.ListBoxFor(model => model.ReadersList, Model.ReadersChoices)
            </div>
        </div>

   
        <div class="form-group">
            @Html.LabelFor(model => model.Title, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Title, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImagePath, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImagePath, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.ImagePath, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Isbn, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Isbn, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Isbn, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LanguageId, "LanguageId", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.LanguageId, Model.LanguageChoices, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LanguageId, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PublisherId, "PublisherId", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.PublisherId, Model.PublisherChoices, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PublisherChoices, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BgColor, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.BgColor, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.BgColor, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TextColor, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.TextColor, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.TextColor, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TextColorSecond, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.TextColorSecond, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.TextColorSecond, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SeriesId, "SeriesId", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SeriesId, Model.SeriesChoices, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SeriesId, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SeriesPartId, "SeriesPartId", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SeriesPartId, Model.SeriesPartChoices, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SeriesPartId, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PublishingDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PublishingDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PublishingDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreateDate, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreateDate, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.CreateDate, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UpdateDate, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.UpdateDate, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.UpdateDate, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsRead, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsRead)
                    @Html.ValidationMessageFor(model => model.IsRead, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>

        @Html.HiddenFor(model => model.ImagePath)

        @Html.Partial("_upload", Model.File)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default"/>
            </div>
        </div>
    </div>
}

<div>
    @Ajax.ActionLink("Tillbaka", "Index", "Admin", null, new AjaxOptions
    {
        UpdateTargetId = "target",
        InsertionMode = InsertionMode.Replace,
        LoadingElementId = "loaderDiv",
        OnFailure = "showXHRError"
    }, new {id = "Back"})
</div>